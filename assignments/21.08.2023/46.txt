class Solution:
    def permute(self, nums: List[int]) -> List[List[int]]:
        def backtrack(current_permutation):
            if len(current_permutation) == len(nums):
                result.append(list(current_permutation))  # Add the permutation to the result
                return           
            for num in nums:
                if num not in current_permutation:
                    current_permutation.append(num)  # Include the current number in the permutation
                    backtrack(current_permutation)  # Recurse
                    current_permutation.pop()  # Backtrack by removing the last number

        result = []
        backtrack([])
        return result